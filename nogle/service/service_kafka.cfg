define servicegroup {
  servicegroup_name kafka-service
  alias Kafka Service
}

define servicegroup {
  servicegroup_name kafka-zookeeper-service
  alias Kafka Zookeeper Service
}


###############################################################################
###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################
###############################################################################


# Define a service to "ping" the local machine

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             PING
        check_command                   check_ping!100.0,20%!500.0,60%
        }


# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             Root Partition
        check_command                   check_local_disk!20%!10%!/
        }
# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_description             Current Users
        check_command                   check_local_users!20!50
        }


# Define a service to check the number of currently running procs
# on the local machine.  Warning if > 250 processes, critical if
# > 400 users.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             Total Processes
        check_command                   check_local_procs!250!400!RSZDT
        }



# Define a service to check the load on the local machine. 

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             Current Load
        check_command                   check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
        }



# Define a service to check SSH on the local machine.
# Disable notifications for this service by default, as not all users may have SSH enabled.

define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             SSH
        check_command                   check_ssh
        notifications_enabled           0
        }

## Check disk usage
define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             check disk usage
        check_command                   check_disk!70!80
        notifications_enabled           0
        }

## check swap
define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             check kafka swap usage
        check_command                   check_local_swap!60%!40%
        notifications_enabled           0
        max_check_attempts      3
        check_interval  5
        retry_interval  3
        notification_interval   10
        }

## check CPU usage from ganglia
define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             check kafka cpu usage
        check_command                   check_ganglia!kafka1.nogle!8649!cpu_system!50!80
        notifications_enabled           0
        max_check_attempts      3
        check_interval  5
        retry_interval  3
        notification_interval   10
        }


## check jmx
define service{
        use                             generic-service         ; Name of service template to use
        hostgroup_name                  kafka-servers
        service_groups                  kafka-service
        service_description             check kafka jmx usage
        check_command                   check_jmx!9999!4589934592!8589934592
        notifications_enabled           0
        max_check_attempts	3
	check_interval	5
	retry_interval	3
        notification_interval	10
        }


# Define a service to check HTTP on the local machine.
# Disable notifications for this service by default, as not all users may have HTTP enabled.

#define service{
#        use                             generic-service         ; Name of service template to use
#        hostgroup_name                  kafka-servers
#        service_description             HTTP
#       check_command                   check_http
#       notifications_enabled           0
#        }



# ZooKeeper Node specific services

define service {
    hostgroup_name  kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service                
    use generic-service
    service_description ZK_Open_File_Descriptors_Count
    check_command check_zk_node!zk_open_file_descriptor_count!500!800
}

define service {
    hostgroup_name kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service
    use generic-service
    service_description ZK_Ephemerals_Count
    check_command check_zk_node!zk_ephemerals_count!10000!100000
}

define service {
    hostgroup_name kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service
    use generic-service
    service_description ZK_Avg_Latency
    check_command check_zk_node!zk_avg_latency!500!1000
}

define service {
    hostgroup_name kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service
    use generic-service
    service_description ZK_Max_Latency
    check_command check_zk_node!zk_max_latency!1000!2000
}

define service {
    hostgroup_name kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service
    use generic-service
    service_description ZK_Min_Latency
    check_command check_zk_node!zk_min_latency!500!1000
}

define service {
    hostgroup_name kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service
    use generic-service
    service_description ZK_Outstanding_Requests
    check_command check_zk_node!zk_outstanding_requests!20!50
}

define service {
    hostgroup_name kafka-zookeeper-servers
    service_groups  kafka-zookeeper-service
    use generic-service
    service_description ZK_Watch_Count
    check_command check_zk_node!zk_watch_count!100!500
}


